Given a string s. In one step you can insert any character at any index of the string.

Return the minimum number of steps to make s palindrome.

A Palindrome String is one that reads the same backward as well as forward.

 

Example 1:
Input: s = "zzazz"
Output: 0
Explanation: The string "zzazz" is already palindrome we don't need any insertions.

Example 2:
Input: s = "mbadm"
Output: 2
Explanation: String can be "mbdadbm" or "mdbabdm".

-----------
SOLUTION :
-----------
class Solution {
public:
    int minInsertions(string s) 
    {
        int n=s.length();
        int ans[n+1][n+1];
        for(int i=0;i<=n;i++)
        {
            for(int j=0;j<=n;j++)
            {
                if(i==0 or j==0 )ans[i][j]=0;
                else if(s[i-1]==s[n-j])
                {
                    ans[i][j]=1+ans[i-1][j-1];
                }
                else
                {
                    ans[i][j]=max(ans[i-1][j],ans[i][j-1]);
                }
            }
        }
        return n-ans[n][n];
        
    }
};
