class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) 
    {
        sort(nums.begin(),nums.end());
        //set<vector<int>>res;
        int n=nums.size();
        vector<vector<int>>ans;
        for(int i=0;i<n-2;i++)
        {
            //Processing Duplicates
            if (i>0 and nums[i] == nums[i-1])continue;
            int left=i+1;
            int right=n-1;
            while(left<right)
            {
                if(nums[i]+nums[left]+nums[right]==0)
                {
                    vector<int> triplet(3, 0);
                    triplet[0] = nums[i];
                    triplet[1] = nums[left];
                    triplet[2] = nums[right];
                    ans.push_back(triplet);
                    //Removing Duplicates
                    while(left<right and nums[left]==triplet[1])left++;
                    while(left<right and nums[right]==triplet[2])right--;
                }
                else if(nums[i]+nums[left]+nums[right]<0)left++;
                else right--;
            }
        }
        return ans;
        
    }
};
