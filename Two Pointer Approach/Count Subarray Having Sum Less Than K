Given an array A of N non-negative numbers and you are also given non-negative number B.
You need to find the number of subarrays in A having sum less than B. We may assume that there is no overflow.

Example Input
Input 1:
 A = [2, 5, 6]
 B = 10
Output 1: 4

Input 2:
 A = [1, 11, 2, 3, 15]
 B = 10
Output 2: 4

Example Explanation:

Explanation 1:
The subarrays with sum less than B are {2}, {5}, {6} and {2, 5}

Explanation 2:
The subarrays with sum less than B are {1}, {2}, {3} and {2, 3}

SOLUTION :
-----------
int Solution::solve(vector<int> &A, int B) 
{
    int n=A.size();
    int left=0,right=0;
    int sum=A[0],count=0;
    while(left<n and right<n)
    {
        if(sum<B)
        {
            right++;
            if(right>left)count+=(right-left);
            if(right<n)sum+=A[right];
        }
        else 
        {
            sum-=A[left];
            left++;
        }
    }
    return count;
}
