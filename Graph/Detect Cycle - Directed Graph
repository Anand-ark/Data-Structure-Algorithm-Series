class Solution {
public:
bool cyclic(int source, int V, vector<int> adj[],bool visited[], bool current[])
{
  
    visited[source]=true;
    current[source]=true;
    for(auto x:adj[source])//x=adj[source][j] in iterative loop
    { 
        if(visited[x]==false &&  cyclic(x,V,adj,visited,current)==true)
        {
            return true;
        }
        else
        {
            if(current[x]==true)return true;
        }
    }
    
    current[source]=false;
    return false;
}
	bool isCyclic(int V, vector<int> adj[]) 
	{
	    bool visited[V];
        bool current[V];
        for(int  i=0;i<V;i++)
        {
            visited[i]=false;
            current[i]= false;
            
        }
        for(int i =0;i<V;i++)
        {  
            if(visited[i]==false)
            {
                bool cycle_found=cyclic(i,V,adj,visited,current);
                if(cycle_found==true)return true;
            }
        }
        return false;
	}
};
