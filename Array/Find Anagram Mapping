Given two listsAandB, and Bis an anagram ofA.Bis an anagram ofAmeansBis made by randomizing the order of the elements inA.
We want to find anindex mappingP, fromAtoB. A mappingP[i] = jmeans theith element in A appears in B at indexj.

These listsAandBmay contain duplicates. If there are multiple answers, output any of them.

For example, given

A = [12, 28, 46, 32, 50]
B = [50, 12, 32, 46, 28]
We should return

Output : [1, 4, 3, 2, 0]


#include<bits/stdc++.h>
using namespace std;
void solve(vector<int>& arr1, vector<int>& arr2) 
{
    int n=arr1.size();
    multimap<int,int>mp;
    for(int i=0;i<n;i++)mp.insert({arr2[i],i});
    vector<int>ans(n);
    for(int i=0;i<n;i++)
    {
        auto key=mp.find(arr1[i]);
        if(key!=mp.end())
        {
            ans[i]=key->second;
            mp.erase(key);
            
        }
    }
    for(int i=0;i<n;i++)cout<<ans[i]<<" ";
    
}
int main()
{
    int n;
    cin>>n;
    vector<int>v1(n);
    vector<int>v2(n);
    int x,y;
    for(int i=0;i<n;i++)
    {
        cin>>x;
        v1[i]=x;
    }
    for(int i=0;i<n;i++)
    {
        cin>>y;
        v2[i]=y;
    }
    solve(v1,v2);
}
