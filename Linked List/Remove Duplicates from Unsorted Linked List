Write a removeDuplicates() function that takes a list and deletes any duplicate nodes from the list. The list is not sorted. 
For example if the linked list is 12->11->12->21->41->43->21 then removeDuplicates() should convert the list to 12->11->21->41->43. 

METHOD 1: (Using Two Loops)
This is the simple way where two loops are used. Outer loop is used to pick the elements one by one and the inner loop compares the picked 
element with the rest of the elements.
Time Complexity : O(N^2)

METHOD 2: (Use Sorting) --- Please note that this method doesnâ€™t preserve the original order of elements.
Sort the elements using Merge Sort. We will soon be writing a post about sorting a linked list and remove
all duplicates in linear time.
Time Complexity : O(N log N)

METHOD 3: (Use Hashing) 
We traverse the link list from head to end. For every newly encountered element, 
we check whether it is in the hash table: if yes, we remove it; otherwise we put it in the hash table.
Time Complexity : O(N)

SOLUTION : METHOD 3
--------------------
