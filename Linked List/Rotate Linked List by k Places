Given the head of a linked list, rotate the list to the right by k places.

Input: head = [1,2,3,4,5], k = 2
Output: [4,5,1,2,3]

Input: head = [0,1,2], k = 4
Output: [2,0,1]

SOLUTION :
------------
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) 
    {
        if(head==NULL or head->next==NULL or k==0)return head;
        ListNode *curr=head;
        ListNode *end=NULL;
        int len=0;
        while(curr!=NULL)
        {
            len++;
            end=curr;
            curr=curr->next;
        }
        k=k%len;
        if(k==0)return head;
        ListNode *start=head;
        int l=len-k-1;
        while(l--)
        {
            start=start->next;
        }
        ListNode *res=start->next;
        start->next=NULL;
        end->next=head;
        return res;
        
    }
};
