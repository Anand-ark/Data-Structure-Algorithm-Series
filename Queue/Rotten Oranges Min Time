class Solution {
public:
    int orangesRotting(vector<vector<int>>& grid) 
    {
        int n=grid.size();
        int m=grid[0].size();
        int fresh=0;
        int time=-1;
        queue<pair<int,int>>q;
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
               if(grid[i][j]==2)q.push({i,j});
               else if(grid[i][j]==1)fresh++;
             
            }
        }
        if(fresh==0)return 0;
        int dir[4][4]={{-1,0},{1,0},{0,-1},{0,1}};
        while(q.size()!=0)
        {
            int len=q.size();
            while(len--)
            {
                pair<int,int>p=q.front();
                q.pop();
                int row=p.first;
                int col=p.second;
                for(auto x:dir)
                {
                    int nearestrow=row+x[0];
                    int nearestcol=col+x[1];
                    if(nearestrow>=0 and nearestrow<n and nearestcol>=0 and nearestcol<m)
                    {
                        if(grid[nearestrow][nearestcol]==1)
                        {
                            grid[nearestrow][nearestcol]=2;
                            fresh--;
                            q.push({nearestrow,nearestcol});
                        }
                    }
                }
            }
            time++;
        }
        if(fresh==0)return time;
        else return -1;
        
    }
};
