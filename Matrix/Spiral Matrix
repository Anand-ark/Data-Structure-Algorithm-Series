Given an m x n matrix, return all elements of the matrix in spiral order.

Example 1:

Input: matrix = [[1,2,3],[4,5,6],[7,8,9]]
Output: [1,2,3,6,9,8,7,4,5]

SOLUTION :
--------
class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) 
    {
        int r=matrix.size();
        int c=matrix[0].size();
        
        int maxr=r-1;
        int minr=0;
        
        int maxc=c-1;
        int minc=0;
        
        vector<int>res;
        int i,j;
        int x=r*c;
        int count=0;
        while(count<x)
        {
            for(i=minr,j=minc;j<=maxc and count<x;j++)
            {
                res.push_back(matrix[i][j]);
                count++;
            }
            minr++;
            for(i=minr,j=maxc;i<=maxr and count<x;i++)
            {
                res.push_back(matrix[i][j]);
                count++;
            }
            maxc--;
            
            for(i=maxr,j=maxc;j>=minc and count<x;j--)
            {
                res.push_back(matrix[i][j]);
                count++;
            }
            maxr--;
            for(i=maxr,j=minc;i>=minr and count<x;i--)
            {
                res.push_back(matrix[i][j]);
                count++;
            }
            minc++;
            
        }
        return res;
        
    }
};
