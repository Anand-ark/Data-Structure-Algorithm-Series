PROBLEM STATEMENT:
Given an expression with only ‘}’ and ‘{‘. The expression may not be balanced. 
The task is to find minimum number of bracket reversals to make the expression balanced.

Examples:

Input : exp = "}{"
Output : 2
We need to change '}' to '{' and '{' to
'}' so that the expression becomes balanced, 
the balanced expression is '{}'

Input : exp = "}{{}}{{{"
Output : 3
The balanced expression is "{{{}}{}}"

Solution:

#include <iostream>
using namespace std;
int solve(string str,int n)
{
    if(n%2!=0)return -1;
    int open=0;
    int close=0;
    for(int i=0;i<n;i++)
    {
        if(str[i]=='{')open++;
        else
        {
            if(open==0)close++;
            else open--;
        }
    }
    int ans=(open/2)+(close/2);
    close=close%2;
    if(close!=0)
    {
        ans+=2;
        return ans;
    }
    return ans;
}
int main() 
{
    int t;
    cin>>t;
    while(t--)
    {
        string str;
        cin>>str;
        int n=str.length();
        cout<<solve(str,n)<<endl;
        
    }
	//code
	return 0;
}
