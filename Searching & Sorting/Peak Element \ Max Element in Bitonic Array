A peak element is an element that is strictly greater than its neighbors.
Given an integer array nums, find a peak element, and return its index. If the array contains multiple peaks, return the index to any of the peaks.

Example 1:
Input: nums = [1,2,3,1]
Output: 2
Explanation: 3 is a peak element and your function should return the index number 2.

Example 2:
Input: nums = [1,2,1,3,5,6,4]
Output: 5
Explanation: Your function can return either index number 1 where the peak element is 2, or index number 5 where the peak element is 6.



SOLUTION : TC -> O(log N)
--------------------------
class Solution {
public:
    int findPeakElement(vector<int>& nums) 
    {
        int n=nums.size();
        if(n==1)return 0;
        int left=0,right=n-1;
        while(left<=right)
        {
            int mid=left+(right-left)/2;
            if(mid!=0 and mid!=n-1)
            {
                if(nums[mid]>nums[mid-1] and nums[mid]>nums[mid+1])return mid;
                else if(nums[mid-1]>nums[mid])right=mid-1;
                else left=mid+1;
            }
            else if(mid==0)//edge cases
            {
                if(nums[0]>nums[1])return 0;
                else return 1;
            }
            else if(mid==n-1)//edge cases
            {
                if(nums[n-1]>nums[n-2])return n-1;
                else return n-2;                
            }
        }
        return 0;
    }
};
