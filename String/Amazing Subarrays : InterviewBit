You are given a string S, and you have to find all the amazing substrings of S.

Amazing Substring is one that starts with a vowel (a, e, i, o, u, A, E, I, O, U).

Input

Only argument given is string S.
Output

Return a single integer X mod 10003, here X is number of Amazing Substrings in given string.
Constraints

1 <= length(S) <= 1e6
S can have special characters
Example

Input
    ABEC

Output
    6

Explanation
	Amazing substrings of given string are :
	1. A
	2. AB
	3. ABE
	4. ABEC
	5. E
	6. EC
	here number of substrings are 6 and 6 % 10003 = 6.

SOLUTION:
----------
bool vowel_pres(char c)
{
    if(c=='a' or c=='e' or c=='i' or c=='o' or c=='u')return true;
    else if(c=='A' or c=='E' or c=='I' or c=='O' or c=='U')return true;
    else return false;
}
int Solution::solve(string A) 
{
    int MOD=10003;
    int n=A.length();
    int count=0;
    for(int i=0;i<n;i++)
    {
        if(vowel_pres(A[i])==true)
        {
            count+=(n-i);
        }
    }
    return count%MOD;
}
