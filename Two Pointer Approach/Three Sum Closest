Given an array S of n integers, find three integers in S such that the sum is closest to a given number, target. 

Return the sum of the three integers.

Assume that there will only be one solution

Example: 

given array S = {-1 2 1 -4}, 

and target = 1.

The sum that is closest to the target is 2. (-1 + 2 + 1 = 2)

SOLUTION :
------------
int Solution::threeSumClosest(vector<int> &A, int B) 
{
    int n=A.size();
    sort(A.begin(),A.end());
    long long sum=0,ans=0;
    int diff=INT_MAX;
    for(int i=0;i<n-2;i++)
    {
        int left=i+1;
        int right=n-1;
        while(left<right)
        {
            sum= (long long )A[left]+A[right]+A[i];

            if(abs(sum-B)<diff)
            {
                ans=sum;
                diff=abs(sum-B);
            }
            else if(sum<B)left++;
            else right--;
        }
    }
    return ans;
}
